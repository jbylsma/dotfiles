#!/usr/bin/env bash
set -e

#
_git_commit_get() {
  git rev-parse "${1}"
}

#
title() {
  local char
  local title

  char='*'
  title="$1"

  printf "\n%$((${#title} + 4))s\n" | tr ' ' "${char}"
  printf "%s* ${title} *\n"
  printf "%$((${#title} + 4))s\n" | tr ' ' "${char}"
}

#
_which() {
  which "$@" >/dev/null 2>&1
}

#
update_brew() {
  title "Brew"

  ! _which brew && \
    echo "brew not found" >&2 && \
    return

  brew update
  brew upgrade
}

#
update_composer() {
  title "Composer"

  ! _which composer && \
    echo "composer not found" >&2 && \
    return

  composer self-update
  composer global update
}

#
update_dotfiles() {
  local dotfiles_branch
  local dotfiles_dir

  dotfiles_branch="origin/master"
  dotfiles_dir="${HOME}/usr/src/dotfiles"

  title "dotfiles"

  test ! -d "${dotfiles_dir}" && \
    echo "dotfiles directory not found" >&2 && \
    return

  cd "${dotfiles_dir}"
  git fetch origin
  if [[ "$(_git_commit_get HEAD)" != "$(_git_commit_get "${dotfiles_branch}")" ]]; then
    echo "Updating dotfiles"
    git pull
  else
    echo "Already up-to-date"
  fi
}

#
main() {
  update_dotfiles
  update_brew
  update_composer
  echo -e "\n${0} completed"
}
main
